version: '3'
services:

  db:
    image: mongo:7.0.0
    container_name: db
    ports:
      - "27017:27017"
    restart: always

  rabbit:
    image: rabbitmq:3.12.4-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
    restart: always

  # Service for loading database fixtures.
  db-fixture-rest-api:
    image: db-fixture-rest-api
    build: 
      context: ./db-fixture-rest-api
      dockerfile: Dockerfile
    container_name: db-fixture-rest-api
    ports:
     - "9000:80"
    environment:
     - PORT=80
     - DBHOST=mongodb://db:27017
     - FIXTURES_DIR=fixtures
    volumes:
     - ./fixtures:/usr/src/app/fixtures:z
    depends_on:
      - db
    restart: always

  gateway:
    image: gateway
    build: 
      context: ./gateway
      dockerfile: Dockerfile-prod
    container_name: gateway
    volumes:
      - /tmp/gateway/npm-cache:/root/.npm:z
      - ./gateway/src:/usr/src/app/src:z
      - ./gateway/public:/usr/src/app/public:z
    ports:
      - "4000:80"
    environment:
      - PORT=80
      - RABBIT=amqp://test:test@rabbit:5672
      - NODE_ENV=development
    depends_on:
      - rabbit
    restart: "no"

  videostreaming:
    image: videostreaming
    build: 
      context: ./videostreaming
      dockerfile: Dockerfile-prod
    container_name: videostreaming
    volumes:
      - /tmp/videostreaming/npm-cache:/root/.npm:z
      - ./videostreaming/src:/usr/src/app/src:z
    ports:
      - "4001:80"
    environment:
      - PORT=80
      - RABBIT=amqp://test:test@rabbit:5672
      - NODE_ENV=development
    depends_on:
      - db
      - rabbit
    restart: "no"

  videoupload:
    image: videoupload
    build: 
      context: ./videoupload
      dockerfile: Dockerfile-prod
    container_name: videoupload
    volumes:
      - /tmp/videoupload/npm-cache:/root/.npm:z
      - ./videoupload/src:/usr/src/app/src:z
      - ./videoupload/uploads:/usr/src/app/uploads:z
    ports:
     - "4004:80"
    environment:
      - PORT=80
      - RABBIT=amqp://test:test@rabbit:5672
      - NODE_ENV=development
    depends_on:
      - rabbit
    restart: "no"

  history:
    image: history
    build: 
      context: ./history
      dockerfile: Dockerfile-prod
    container_name: history
    volumes:
      - /tmp/history/npm-cache:/root/.npm:z
      - ./history/src:/usr/src/app/src:z
    ports:
     - "4002:80"
    environment:
      - PORT=80
      - RABBIT=amqp://test:test@rabbit:5672
      - DBHOST=mongodb://db:27017
      - DBNAME=history
      - NODE_ENV=development
    depends_on:
      - db
      - rabbit
    restart: "no"
  
  awsstorage:
    image: awsstorage
    build: 
        context: ./awsstorage
        dockerfile: Dockerfile-prod
    container_name: awsstorage
    volumes:
        - /tmp/awsstorage/npm-cache:/root/.npm:z
        - ./awsstorage/src:/usr/src/app/src:z
    ports:
        - "4005:80"
    environment:
        - PORT=80
        - STORAGE_REGION=${STORAGE_REGION}
        - STORAGE_NAME=${STORAGE_NAME}
        - STORAGE_ACCESS_KEY=${STORAGE_ACCESS_KEY}
        - STORAGE_SECRET_ACCESS_KEY=${STORAGE_SECRET_ACCESS_KEY}
        - STORAGE_FOLDER_NAME=${STORAGE_FOLDER_NAME}
    restart: "no"

  metadata:
    image: metadata
    build: 
      context: ./metadata
      dockerfile: Dockerfile-prod
    container_name: metadata
    volumes:
      - /tmp/metadata/npm-cache:/root/.npm:z
      - ./metadata/src:/usr/src/app/src:z
    ports:
     - "4006:80"
    environment:
      - PORT=80
      - RABBIT=amqp://test:test@rabbit:5672
      - DBHOST=mongodb://db:27017
      - DBNAME=metadata
      - NODE_ENV=development
    depends_on:
      - db
      - rabbit
    restart: "no"
